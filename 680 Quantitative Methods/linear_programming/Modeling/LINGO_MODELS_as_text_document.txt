MAIN EXAMPLE

max = 3*football+5*basketball;

football<=4;
2*basketball<=12;
3*football+2*basketball<=18;



********************************************************************************************************

MADONA

model:
sets:
months/1..20/:paysaks, paybloom, paymacy, loansaks, loanbloom, loanmacy;
endsets

min = @sum(months(t):paysaks(t)+paybloom(t)+paymacy(t));

@for(months(t):paysaks(t)+paybloom(t)+paymacy(t)<=10000);
@for(months(t)|t#GE#2:loansaks(t-1)*1.005-paysaks(t)=loansaks(t));
@for(months(t)|t#GE#2:loanbloom(t-1)*1.01-paybloom(t)=loanbloom(t));
@for(months(t)|t#GE#2:loanmacy(t-1)*1.015-paymacy(t)=loanmacy(t));

20000*1.005-paysaks(1)=loansaks(1);

50000*1.01-paybloom(1)=loanbloom(1);

40000*1.015-paymacy(1)=loanmacy(1);

loansaks(20)=0;
loanbloom(20)=0;
loanmacy(20)=0;


********************************************************************************************************

INVENTORY

sets:
period/1..3/:dem, inv, prod, sold, cost;
endsets

data:
	dem = 20 10 15;
	cost = 13 14 15;
enddata

min = 2*@sum(period(i):inv(i))+ @sum(period(i):cost(i)*prod(i));
@for(period(i):sold(i)=dem(i));
@for(period(t):sold(t)<=.5*prod(t) +inv(t));
@for(period(t)|t#le#2: inv(t)+prod(t)=sold(t)+inv(t+1));
 inv(3)+prod(3)=sold(3)+inventory;


inv(1)=5;



********************************************************************************************************
GHANDI
MODEL:

Sets:

Products/1..2/:Startinv;
Months/1..4/:Clothinv, ClothAvail;
PM (Products,Months): Reg, Overtime, Inventory,Demand ;

ENDSETS

Data:
Startinv = 2 1;
Demand = 15 10
	   14 12
	   12 11
	   15 19;

ClothAvail = 90 60 80 70;
ENDDATA

MIN = @sum(PM(i,j):3 *Inventory(i,j)+4*reg(i,j)+8*(overtime(i,j)));

@for (products(i):startinv(i)+Reg(i,1)+Overtime(i,1)= Inventory(i,1)+Demand(i,1));
@for (products(i):@for(Months(j)|j#ge# 2:Inventory(i,j-1)+Reg(i,j)+Overtime(i,j)= Inventory(i,j)+Demand(i,j)));
@for (months(j):@sum(products(i):Reg(i,j))<=25);
3*(reg(1,1)+overtime(1,1))+2*(reg(2,1)+Overtime(2,1))<=90+Clothinv(1);
@for (months(j)|j#GE#2:3*(reg(1,j)+overtime(1,j))+2*(reg(2,j)+Overtime(2,j)) +clothinv(j-1)<=90+Clothinv(j));


********************************************************************************************************
HIRE/FIRE
Model:
Sets:

Years /1..5/:Drivers, Hired, Fired, Demand;

Endsets

Data:
Demand = 60 70 50 65 75;
ENDDATA

Min =@sum (years(j): 10000*drivers(j)+14000*Hired(j)+2000*Fired(j));

Drivers(1)=50;
@for(years(j)|j#LE#4: drivers(j)+hired(j)-fired(j)=drivers(j+1)); 
@for(years(j):drivers(j)+hired(j)-fired(j)>=demand(j));
End

********************************************************************************************************
OILBLEND

MODEL:

Sets:

Crude/1..2/:Availcrude;
Process/1..3/:costprocess;
Grade/1..3/:Qualgrade, Cracker, Amtblended, Extra;
Product/1..2/:Averagegrade, Maxdemand, Sellpr;
CrudetoPro (crude,process):ChangeCrude;
Gradetoproduct(Grade, Product):Blended;

ENDSETS

Data:
Availcrude = 5000, 4500;
Qualgrade = 6,8, 10;
Averagegrade=9, 7;
Maxdemand = 2000, 600;
SellPr = 8,6;
Costprocess = 3.4, 3, 2.6;
ENDDATA

MAX = @sum(product(l):sellpr(l)*@sum(grade(k): blended(k,l)))-( 
	@sum(process(j):Costprocess(j)*@sum(crude(i):ChangeCrude(i,j))) +
	+1.3*Cracker(1)+2*cracker(2)+.2*@sum(grade(k):Extra(k)));

@for(crude(i):@sum(process(j): Changecrude(i,j))<=Availcrude(i));

.2*Changecrude(1,1)+.3*Changecrude(1,2)+.4*Changecrude(1,3)+
.2*Changecrude(2,1)+.3*Changecrude(2,2)+.4*Changecrude(2,3)=Amtblended(1);	
.2*Changecrude(1,1)+.3*Changecrude(1,2)+.4*Changecrude(1,3)+
.2*Changecrude(2,1)+.3*Changecrude(2,2)+.4*Changecrude(2,3)=Amtblended(2);	
.6*Changecrude(1,1)+.4*Changecrude(1,2)+.2*Changecrude(1,3)+
.6*Changecrude(2,1)+.4*Changecrude(2,2)+.2*Changecrude(2,3)=Amtblended(3);	

Amtblended(1)=@sum(product(l):Blended(1,l))+cracker(1)+Extra(1);
@for(grade(k)|k#GE#2:Amtblended(k)+cracker(k-1)=@sum(product(l):Blended(k,l))+cracker(k)+Extra(k));
@for(product(l):@sum(grade(k):Qualgrade(k)*Blended(k,l))>=
		averagegrade(l)*@sum(grade(k):blended(k,l)));
@for(product(l):@sum(grade(k):blended(k,l))<=Maxdemand(l));
End


********************************************************************************************************
THAILAND


MODEL:


Sets:
center/1..3/:PeopleInd;
bases/1..3/:BaseCap,Numbase;
Ship/1..2/:Available,Capacity;
route/1..7/;
Centbase(center,bases):Fromcentobase, costcentbase;
SR(ship,route):shiproute, costshiproute;
BaseShipRoute(bases, ship, route): NumBSR;

ENDSETS

Data:
Peopleind = 1000 600 700;
BaseCap = 1000 800 700;
Capacity = 200 500;
costcentbase = 200 200 300
		   300 400 220
		   300 400 250;
costshiproute = 5740 11110
		    6030 11545
		    6330 11995
		    5920 11380
		    6200 11800
		    6280 11920
		    6440 12160;

Available = 7 5;
EndData


MIN = @sum(centbase(i,j):costcentbase(i,j)* fromcentobase(i,j))+
	@sum(SR(k,l):costshiproute(k,l)*shiproute(k,l));

@for (bases(j):@sum(center(i):fromcentobase(i,j))<=Basecap(j));
@for (center(i):@sum(bases(j):fromcentobase(i,j))=Peopleind(i));
@for (bases(j):@sum(center(i):fromcentobase(i,j))=Numbase(j));
@sum (ship(k): NumBSR(1,k,1)+NumBSR(1,k,2)+NumBSR(1,k,6)+NumBSR(1,k,7))=numbase(1);
@sum (ship(k): NumBSR(2,k,2)+NumBSR(2,k,3)+NumBSR(2,k,4)+NumBSR(2,k,7))=numbase(2);
@sum (ship(k): NumBSR(3,k,3)+NumBSR(3,k,5)+NumBSR(3,k,6)+NumBSR(3,k,7))=numbase(3);
@sum (bases(j):NUMBSR(j,1,7))=0;
@for(ship(k):@sum(route(l):shiproute(k,l))<=Available(k));
@for(SR(k,l): @sum(bases(j):NumBSR(j,k,l))<=Capacity(k)*shiproute(k,l));
End
GIN shiproute(1,1);
GIN shiproute(2,1);
GIN shiproute(1,2);
GIN shiproute(2,2);
GIN shiproute(1,3);
GIN shiproute(2,3);
GIN shiproute(1,4);
GIN shiproute(2,4);
GIN shiproute(1,5);
GIN shiproute(2,5);
GIN shiproute(1,6);
GIN shiproute(2,6);
GIN shiproute(1,7);
GIN shiproute(2,7);


********************************************************************************************************
BERRY

model:
sets:
district/1..3/:votes;
city/1..8/:rep, dem;
dist_city(district,city): x;
endsets

data:
rep = 80 60 40 20 40 40 70 50;
dem = 34 44 44 24 114 64 14 44;
enddata

max = @sum(district(i): votes(i));
@for(district(i): @sum(city(j):(rep(j)+dem(j))*x(i,j))>=150);
@for(district(i): @sum(city(j):(rep(j)+dem(j))*x(i,j))<=350);
@for(city(j): @sum(district(i): x(i,j)) = 1);
@for(district(i): @sum(city(j):(rep(j)-dem(j))*x(i,j))<=350*(1-votes(i)));
@for(district(i): @sum(city(j):(rep(j)-dem(j))*x(i,j))>=-350*(votes(i)));
@for(dist_city(i,j): @bin(x(i,j)));
@for(district(i):@bin(votes(i)));
















